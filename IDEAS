 * Create an abstract type/interface with functions such as Put, Interact
   and so on. Then the derived types can be stored in arrays and vectors and
   thus we can store them in a single place. This will come handy to store
   certain objects such as buttons and surfaces in the same place.

   type Base_Type is new Ada.Finalization.Controlled with
      record
         -- The object that contains it, it can't be contained by more than
         -- one object for the moment. Once it's finalised, it will be removed
         -- from the parent object.
         Parent_Object     : Base_Type'Class;
         Reference_Counter : Atomic_Counter;
      end record;
   overriding Initialize;
   overriding Finalize;
   overriding Adjust;
   procedure Put;
   procedure Interact; -- Maybe handle

 * Add a new package to work with the cursors from the surfaces, and allow
   to focus, unfocus.
